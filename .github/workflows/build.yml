name: Build

on:
  push:
  pull_request:
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{matrix.os}}

    name: Build on ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: >
          sudo apt-get update &&
          sudo apt-get install
          gcc-multilib libzmq3-dev libczmq-dev libjson-c-dev
          libmsgpack-dev nodejs chromium-browser

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: >-
          cd ../;
          New-Item -Path . -Name libzmq -ItemType "directory";
          cd libzmq;
          git init;
          git remote add origin https://github.com/zeromq/libzmq.git;
          git pull origin master;
          Copy-Item -Path ./include/* -Destination ../khala-internal/src/mingwX64Main/resources/include/libzmq -Recurse;
          cd ../;
          echo 1;
          New-Item -Path . -Name czmq -ItemType "directory";
          echo 2;
          cd czmq;
          echo 3;
          git init;
          echo 4;
          git remote add origin https://github.com/zeromq/czmq.git;
          echo 5;
          git pull origin master;
          echo 6;
          Copy-Item -Path ./include/* -Destination ../khala-internal/src/mingwX64Main/resources/include/czmq -Recurse;
          echo 7;
          cd ../;
          New-Item -Path . -Name jsonc -ItemType "directory";
          echo 8;
          cd jsonc;
          git init;
          git remote add origin https://github.com/json-c/json-c.git;
          git pull origin master;
          Copy-Item -Path ./* -Destination ../khala-internal/src/mingwX64Main/resources/include/jsonc;
          cd ../;
          New-Item -Path . -Name msgpackc -ItemType "directory";
          cd msgpackc;
          git init;
          git remote add origin https://github.com/msgpack/msgpack-c.git;
          git pull origin c_master;
          Copy-Item -Path ./include/* -Destination ../khala-internal/src/mingwX64Main/resources/include/msgpackc -Recurse;
          cd ../khala-internal;

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-gradle-

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew build

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: ./gradlew linkDebugTestMingwX64; Copy-Item src/mingwX64Main/resources/bin/* build/bin/mingwX64/debugTest/; ./gradlew build

      - name: Publish dev package
        run: ./gradlew publish -Pbintray_user=${{ secrets.BINTRAY_USER }} -Pbintray_api_key=${{ secrets.BINTRAY_API_KEY }}

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip